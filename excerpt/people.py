#!/usr/bin/python3.6
# -*- coding: utf-8 -*-
# People module

from random import *
from util import *

class Person(WordList):
	def GetPerson(self, sNot = "", NotList = None):
		if NotList == None:
			NotList = []
		
		if sNot != "":
			NotList.append(sNot)
		
		return self.GetWord(sNot = sNot, NotList = NotList)
		
class MaleSO(Person):
	def __init__(self):
		super().__init__(['boyfriend',
			'fiancé',
			'hubby',
			'husband'])
			
class FemaleSO(Person):
	def __init__(self):
		super().__init__(['bride',
			'girlfriend',
			'fiancé',
			'wife'])
		
class FemaleFWB(Person):
	def __init__(self):
		super().__init__(['aunt',
		'babysitter',
		'best friend\'s wife',
		'boss',
		'boss\'s wife',
		'cousin',
		'cute roommate',
		'dad\'s girlfriend',
		'daughter',
		'daughter\'s best friend',
		'daughter-in-law',
		'eighth-grade teacher',
		'English teacher',
		'ex-girlfriend',
		'ex-wife',
		'girlfriend',
		'girlfriend\'s mom',
		'girlfriend\'s sister',
		'guidance counselor',
		'land lady',
		'English lit student',
		'maid',
		'math teacher',
		'marriage counselor',
		'math tutor',
		'mom\'s best friend',
		'mother-in-law',
		'neighbor\'s wife',
		'next-door neighbor',
		'niece',
		'parole officer',
		'pastor\'s wife',
		'roommate\'s girlfriend',
		'secretary',
		'sister',
		'sister-in-law',
		'sister\'s hot friend',
		'step-daughter',
		'step-mom',
		'step-sister',
		'Sunday School teacher',
		'teacher',
		'twin sister',
		'wife',
		'wife\'s Avon Lady'])
		
class MaleFWB(Person):
	def __init__(self):
		super().__init__(['attorney',
			'billionaire fiancé',
			'boss',
			'boyfriend',
			'brother',
			'brother-in-law',
			'coach',
			'daddy',
			'daughter\'s boyfriend',
			'ex-boyfriend',
			'ex-husband',
			'father',
			'father-in-law',
			'fiancé',
			'geography teacher',
			'girlfriend',
			'guidance counselor',
			'hubby',
			'husband',
			'landlord',
			'life coach',
			'mailman',
			'manager',
			'minister',
			'pastor',
			'personal trainer',
			'pizza delivery boy',
			'pool boy',
			'priest',
			'prince',
			'principal',
			'proctologist',
			'professor',
			'psychiatrist',
			'roommate',
			'shift supervisor',
			'sister\'s boyfriend',
			'son-in-law',
			'step-son',
			'sugar daddy',
			'twin brother',
			'vice-principal',
			'yoga instructor'])
			
class JobBlueCollar(Person):
	def __init__(self):
		super().__init__(['aluminum can recycler',
		'Amazon delivery guy',
		'bag boy',
		'baggage handler',
		'ball boy',
		'bellhop',
		'bus driver',
		'Starbucks barista',
		'beat cop',
		'blogger',
		'bus driver',
		'call center worker',
		'cat box scooper',
		'cattle wrangler',
		'civil servant',
		'club bouncer',
		'Comcast technician',
		'dish washer at Applebee\'s',
		'dog walker',
		'dog groomer',
		'farm hand',
		'farmer',
		'food court worker',
		'freshman in college',
		'fry cook',
		'garbage man',
		'gas station attendant',
		'golf caddy',
		'gym coach',
		'home theater installer',
		'hot dog vendor',
		'high school history teacher',
		'janitor',
		'junk scavenger',
		'lawn maintenance man',
		'living statue',
		'Lyft driver',
		'manager at Arby\'s',
		'masseur',
		'male nurse',
		'mall santa',
		'mechanic',
		'meter maid',
		'office assistant',
		'painter',
		'pest control technician',
		'pet store clerk',
		'Pizza Hut delivery guy',
		'plumber',
		'pool boy',
		'porn set fluffer',
		'postal clerk',
		'private in the army',
		'public restroom attendant',
		'rent-a-cop',
		'roadie',
		'roadkill disposal worker',
		'sea man',
		'self-published author',
		'shift supervisor',
		'short-order cook',
		'stable boy',
		'stand-up comedian',
		'starving artist',
		'Whole Foods stock boy',
		'taxidermist',
		'third-grade teacher',
		'ticket stub collector',
		'tow-truck driver',
		'tour guide',
		'truck driver',
		'used car salesman',
		'waiter',
		'Wal-Mart greeter',
		'wedding DJ'])
		
class JobWhiteCollar(Person):
	def __init__(self):
		super().__init__(['accountant',
						'actuary',
						'airline pilot',
						'Apple Store genius',
						'architect',
						'astronaut',
						'bank teller',
						'bass guitarist',
						'bee keeper',
						'cakery owner',
						'chiropractor',
						'city councilman',
						'civil engineer',
						'classical violinist',
						'crossword puzzle writer',
						'database developer',
						'dental hygienist'
						'dentist',
						'dive instructor',
						'executive producer',
						'first-chair flautist',
						'funeral director',
						'gynecologist',
						'homicide detective',
						'fashion photographer',
						'flight attendant',
						'house flipper',
						'insurance adjuster',
						'investment banker',
						'IT professional',
						'jet fighter pilot',
						'life coach',
						'middle manager',
						'motivational speaker',
						'network administrator',
						'neurosurgeon',
						'opthamologist',
						'orthodonist',
						'pharmacist',
						'PhD candidate',
						'physician\'s assistant',
						'photographer',
						'plastic surgeon',
						'podiatrist',
						'high school principal',
						'proctologist',
						'project manager',
						'public radio host',
						'published author',
						'radiologist',
						'rancher',
						'realtor',
						'regional manager',
						'romance novelist',
						'sex therapist',
						'sex toy designer',
						'stay-at-home dad',
						'surgeon',
						'tax attorney',
						'tenured professor',
						'therapist',
						'train conductor',
						'urologist',
						'veterinarian',
						'web designer',
						'Wendy\'s franchise owner',
						'yoga teacher',
						'YouTube personality'])
		
class JobWealthyMale(Person):
	def __init__(self):
		super().__init__(['archduke',
		'baron',
		'Bitcoin billionaire',
		'billionaire',
		'celebrity chef',
		'CEO',
		'count',
		'duke',
		'earl',
		'emperor',
		'film mogul',
		'general',
		'king',
		'knight',
		'marquess',
		'marquis',
		'movie star',
		'Nobel Prize winner',
		'Dalai Lama',
		'pope',
		'president',
		'prime minister',
		'prince',
		'pro football quarterback',
		'rock star',
		'senator',
		'shah',
		'sheikh',
		'sheriff',
		'sultan',
		'surgeon general',
		'titan of industry',
		'viscount'])

class JobWealthyFemale(Person): 
	def __init__(self):
		super().__init__(['actress',
		'archduchess',
		'baroness',
		'CEO',
		'contessa',
		'countess',
		'duchess',
		'heiress',
		'empress',
		'fasion designer',
		'first lady',
		'high-born lady',
		'marchioness',
		'mother superior',
		'Nobel Prize winner',
		'porn star',
		'president',
		'princess',
		'prime minister',
		'queen',
		'queen mother',
		'pop star',
		'senator',
		'social media influencer',
		'supermodel',
		'surgeon general',
		'viscountess',
		'wealthy MILF'])